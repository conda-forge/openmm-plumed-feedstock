{% set name = "openmm-plumed" %}
{% set version = "2.0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/openmm/openmm-plumed/archive/v{{ version }}.tar.gz
  sha256: cd812b5866d3ff93875604be6cd29eae70243db1c2e4b68f8e9658cfd3497e88

build:
  number: 1
  skip: true  # [win or (linux and cuda_compiler_version in (undefined, 'None'))]
  missing_dso_whitelist:
    - "*/libcuda.*"    # [linux64 or ppc64le]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [linux and cuda_compiler_version != 'None']
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - swig                                   # [build_platform != target_platform]
    - openmm >=8.1.0                         # [build_platform != target_platform]
    - cmake
    - make
    - conda-build  # [osx]
  host:
    - python
    - pip
    - openmm >=8.1.0
    - plumed
    - swig                                   # [not arm64]
    - ocl-icd  # [linux]
    - khronos-opencl-icd-loader  # [osx]
  run:
    - python
    - {{ pin_compatible('openmm', min_pin='x.x', max_pin='x.x') }}
    - {{ pin_compatible('plumed', min_pin='x.x', max_pin='x.x') }}
    - ocl-icd  # [linux]
    - ocl-icd-system  # [linux]
    - khronos-opencl-icd-loader  # [osx]
    - ocl_icd_wrapper_apple      # [osx]

test:
  imports:
    - openmmplumed
  commands: |
    cd ${PREFIX}/share/openmm-plumed/tests
    set +e
    for f in Test*; do
      if [[ $f == *Cuda* || $f == *OpenCL* ]]; then
        continue
      fi
      ./${f}
      ((exitcode+=$?))
    done
    exit $exitcode


about:
  home: https://github.com/openmm/openmm-plumed
  license: MIT
  license_file: README.md
  summary: 'A connection between OpenMM and PLUMED'
  description: |
    This project provides a connection between OpenMM and PLUMED.
    It allows you to bias or analyze an OpenMM simulation based
    on collective variables.
  doc_url: https://github.com/openmm/openmm-plumed
  dev_url: https://github.com/openmm/openmm-plumed

extra:
  recipe-maintainers:
    - RaulPPelaez
    - raimis
    - jaimergp
    - peastman
